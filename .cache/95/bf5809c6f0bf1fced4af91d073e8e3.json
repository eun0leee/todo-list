{"id":"src/APIs.js","dependencies":[{"name":"C:\\Users\\user\\Desktop\\window98-Todo-list\\package.json","includedInParent":true,"mtime":1671688836934},{"name":"./APIkey.js","loc":{"line":1,"column":25,"index":25},"parent":"C:\\Users\\user\\Desktop\\window98-Todo-list\\src\\APIs.js","resolved":"C:\\Users\\user\\Desktop\\window98-Todo-list\\src\\APIkey.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addServerTodos = addServerTodos;\nexports.deleteServerTodos = deleteServerTodos;\nexports.editServerTodos = editServerTodos;\nexports.getServerTodos = getServerTodos;\nvar _APIkey = require(\"./APIkey.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nvar APIKEY = _APIkey.TODO_KEY;\nvar USERNAME = \"KDT3_LeeEunyoung\";\nvar HEADERS = {\n  \"content-type\": \"application/json\",\n  APIKEY: APIKEY,\n  username: USERNAME\n};\nvar APIURL = \"https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos\";\n\n//////////////////// API ///////////////////////\n\n//get\nfunction getServerTodos() {\n  return _getServerTodos.apply(this, arguments);\n} //add\nfunction _getServerTodos() {\n  _getServerTodos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var res, json;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(APIURL, {\n              method: \"GET\",\n              headers: HEADERS\n            });\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n          case 6:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _getServerTodos.apply(this, arguments);\n}\nfunction addServerTodos(_x, _x2) {\n  return _addServerTodos.apply(this, arguments);\n} //edit\nfunction _addServerTodos() {\n  _addServerTodos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(title, order) {\n    var res, json;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch(APIURL, {\n              method: \"POST\",\n              headers: HEADERS,\n              body: JSON.stringify({\n                title: title,\n                order: order\n              })\n            });\n          case 3:\n            res = _context2.sent;\n            _context2.next = 6;\n            return res.json();\n          case 6:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n          case 13:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 10]]);\n  }));\n  return _addServerTodos.apply(this, arguments);\n}\nfunction editServerTodos(_x3, _x4) {\n  return _editServerTodos.apply(this, arguments);\n} //delete\nfunction _editServerTodos() {\n  _editServerTodos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id, title) {\n    var done,\n      order,\n      res,\n      json,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            done = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : false;\n            order = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : 0;\n            _context3.prev = 2;\n            _context3.next = 5;\n            return fetch(\"\".concat(APIURL, \"/\").concat(id), {\n              method: \"PUT\",\n              headers: HEADERS,\n              body: JSON.stringify({\n                title: title,\n                done: done,\n                order: order\n              })\n            });\n          case 5:\n            res = _context3.sent;\n            _context3.next = 8;\n            return res.json();\n          case 8:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n          case 12:\n            _context3.prev = 12;\n            _context3.t0 = _context3[\"catch\"](2);\n            console.log(_context3.t0);\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[2, 12]]);\n  }));\n  return _editServerTodos.apply(this, arguments);\n}\nfunction deleteServerTodos(_x5) {\n  return _deleteServerTodos.apply(this, arguments);\n}\nfunction _deleteServerTodos() {\n  _deleteServerTodos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id) {\n    var res, json;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch(\"\".concat(APIURL, \"/\").concat(id), {\n              method: \"DELETE\",\n              headers: HEADERS\n            });\n          case 3:\n            res = _context4.sent;\n            _context4.next = 6;\n            return res.json();\n          case 6:\n            json = _context4.sent;\n            return _context4.abrupt(\"return\", json);\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.log(_context4.t0);\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 10]]);\n  }));\n  return _deleteServerTodos.apply(this, arguments);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":10,"column":0},"source":"src/APIs.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"src/APIs.js","original":{"line":1,"column":39}},{"generated":{"line":12,"column":0},"source":"src/APIs.js","original":{"line":1,"column":39}},{"generated":{"line":12,"column":47},"source":"src/APIs.js","original":{"line":2,"column":0}},{"generated":{"line":13,"column":0},"source":"src/APIs.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"src/APIs.js","original":{"line":2,"column":0}},{"generated":{"line":15,"column":0},"source":"src/APIs.js","original":{"line":3,"column":0}},{"generated":{"line":15,"column":4},"source":"src/APIs.js","original":{"line":3,"column":6},"name":"APIKEY"},{"generated":{"line":15,"column":10},"source":"src/APIs.js","original":{"line":3,"column":12}},{"generated":{"line":15,"column":13},"source":"src/APIs.js","original":{"line":3,"column":15},"name":"TODO_KEY"},{"generated":{"line":15,"column":29},"source":"src/APIs.js","original":{"line":3,"column":23}},{"generated":{"line":16,"column":0},"source":"src/APIs.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":4},"source":"src/APIs.js","original":{"line":4,"column":6},"name":"USERNAME"},{"generated":{"line":16,"column":12},"source":"src/APIs.js","original":{"line":4,"column":14}},{"generated":{"line":16,"column":15},"source":"src/APIs.js","original":{"line":4,"column":17}},{"generated":{"line":16,"column":33},"source":"src/APIs.js","original":{"line":4,"column":35}},{"generated":{"line":17,"column":0},"source":"src/APIs.js","original":{"line":5,"column":0}},{"generated":{"line":17,"column":4},"source":"src/APIs.js","original":{"line":5,"column":6},"name":"HEADERS"},{"generated":{"line":17,"column":11},"source":"src/APIs.js","original":{"line":5,"column":13}},{"generated":{"line":17,"column":14},"source":"src/APIs.js","original":{"line":5,"column":16}},{"generated":{"line":18,"column":2},"source":"src/APIs.js","original":{"line":6,"column":2}},{"generated":{"line":18,"column":16},"source":"src/APIs.js","original":{"line":6,"column":16}},{"generated":{"line":18,"column":18},"source":"src/APIs.js","original":{"line":6,"column":18}},{"generated":{"line":18,"column":36},"source":"src/APIs.js","original":{"line":6,"column":36}},{"generated":{"line":19,"column":2},"source":"src/APIs.js","original":{"line":7,"column":2},"name":"APIKEY"},{"generated":{"line":19,"column":8},"source":"src/APIs.js","original":{"line":7,"column":8}},{"generated":{"line":19,"column":10},"source":"src/APIs.js","original":{"line":7,"column":10},"name":"APIKEY"},{"generated":{"line":19,"column":16},"source":"src/APIs.js","original":{"line":7,"column":16}},{"generated":{"line":20,"column":2},"source":"src/APIs.js","original":{"line":8,"column":2},"name":"username"},{"generated":{"line":20,"column":10},"source":"src/APIs.js","original":{"line":8,"column":10}},{"generated":{"line":20,"column":12},"source":"src/APIs.js","original":{"line":8,"column":12},"name":"USERNAME"},{"generated":{"line":21,"column":0},"source":"src/APIs.js","original":{"line":9,"column":0}},{"generated":{"line":21,"column":1},"source":"src/APIs.js","original":{"line":9,"column":1}},{"generated":{"line":22,"column":0},"source":"src/APIs.js","original":{"line":11,"column":0}},{"generated":{"line":22,"column":4},"source":"src/APIs.js","original":{"line":11,"column":6},"name":"APIURL"},{"generated":{"line":22,"column":10},"source":"src/APIs.js","original":{"line":11,"column":12}},{"generated":{"line":22,"column":13},"source":"src/APIs.js","original":{"line":11,"column":15}},{"generated":{"line":22,"column":78},"source":"src/APIs.js","original":{"line":11,"column":80}},{"generated":{"line":24,"column":0},"source":"src/APIs.js","original":{"line":13,"column":0}},{"generated":{"line":26,"column":0},"source":"src/APIs.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":0},"source":"src/APIs.js","original":{"line":15,"column":0}},{"generated":{"line":27,"column":9},"source":"src/APIs.js","original":{"line":16,"column":22},"name":"getServerTodos"},{"generated":{"line":27,"column":23},"source":"src/APIs.js","original":{"line":16,"column":36}},{"generated":{"line":28,"column":2},"source":"src/APIs.js","original":{"line":16,"column":36}},{"generated":{"line":29,"column":0},"source":"src/APIs.js","original":{"line":16,"column":36}},{"generated":{"line":29,"column":2},"source":"src/APIs.js","original":{"line":29,"column":0}},{"generated":{"line":30,"column":0},"source":"src/APIs.js","original":{"line":29,"column":0}},{"generated":{"line":31,"column":2},"source":"src/APIs.js","original":{"line":29,"column":0}},{"generated":{"line":31,"column":79},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":32,"column":4},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":33,"column":4},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":34,"column":6},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":35,"column":8},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":36,"column":10},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":37,"column":12},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":38,"column":12},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":39,"column":12},"source":"src/APIs.js","original":{"line":16,"column":7}},{"generated":{"line":39,"column":19},"source":"src/APIs.js","original":{"line":18,"column":22},"name":"fetch"},{"generated":{"line":39,"column":24},"source":"src/APIs.js","original":{"line":18,"column":27}},{"generated":{"line":39,"column":25},"source":"src/APIs.js","original":{"line":18,"column":28},"name":"APIURL"},{"generated":{"line":39,"column":31},"source":"src/APIs.js","original":{"line":18,"column":34}},{"generated":{"line":39,"column":33},"source":"src/APIs.js","original":{"line":18,"column":36}},{"generated":{"line":40,"column":14},"source":"src/APIs.js","original":{"line":19,"column":6},"name":"method"},{"generated":{"line":40,"column":20},"source":"src/APIs.js","original":{"line":19,"column":12}},{"generated":{"line":40,"column":22},"source":"src/APIs.js","original":{"line":19,"column":14}},{"generated":{"line":40,"column":27},"source":"src/APIs.js","original":{"line":19,"column":19}},{"generated":{"line":41,"column":14},"source":"src/APIs.js","original":{"line":20,"column":6},"name":"headers"},{"generated":{"line":41,"column":21},"source":"src/APIs.js","original":{"line":20,"column":13}},{"generated":{"line":41,"column":23},"source":"src/APIs.js","original":{"line":20,"column":15},"name":"HEADERS"},{"generated":{"line":42,"column":12},"source":"src/APIs.js","original":{"line":21,"column":4}},{"generated":{"line":42,"column":13},"source":"src/APIs.js","original":{"line":21,"column":5}},{"generated":{"line":42,"column":14},"source":"src/APIs.js","original":{"line":21,"column":6}},{"generated":{"line":43,"column":10},"source":"src/APIs.js","original":{"line":21,"column":6}},{"generated":{"line":44,"column":12},"source":"src/APIs.js","original":{"line":18,"column":10},"name":"res"},{"generated":{"line":44,"column":15},"source":"src/APIs.js","original":{"line":18,"column":13}},{"generated":{"line":45,"column":12},"source":"src/APIs.js","original":{"line":18,"column":13}},{"generated":{"line":46,"column":12},"source":"src/APIs.js","original":{"line":18,"column":13}},{"generated":{"line":46,"column":19},"source":"src/APIs.js","original":{"line":22,"column":23},"name":"res"},{"generated":{"line":46,"column":22},"source":"src/APIs.js","original":{"line":22,"column":26}},{"generated":{"line":46,"column":23},"source":"src/APIs.js","original":{"line":22,"column":27},"name":"json"},{"generated":{"line":46,"column":27},"source":"src/APIs.js","original":{"line":22,"column":31}},{"generated":{"line":46,"column":29},"source":"src/APIs.js","original":{"line":22,"column":33}},{"generated":{"line":47,"column":10},"source":"src/APIs.js","original":{"line":22,"column":33}},{"generated":{"line":48,"column":12},"source":"src/APIs.js","original":{"line":22,"column":10},"name":"json"},{"generated":{"line":48,"column":16},"source":"src/APIs.js","original":{"line":22,"column":14}},{"generated":{"line":49,"column":12},"source":"src/APIs.js","original":{"line":22,"column":14}},{"generated":{"line":49,"column":45},"source":"src/APIs.js","original":{"line":23,"column":11},"name":"json"},{"generated":{"line":49,"column":49},"source":"src/APIs.js","original":{"line":23,"column":15}},{"generated":{"line":50,"column":10},"source":"src/APIs.js","original":{"line":23,"column":15}},{"generated":{"line":51,"column":12},"source":"src/APIs.js","original":{"line":23,"column":15}},{"generated":{"line":52,"column":12},"source":"src/APIs.js","original":{"line":23,"column":15}},{"generated":{"line":53,"column":12},"source":"src/APIs.js","original":{"line":25,"column":4},"name":"console"},{"generated":{"line":53,"column":19},"source":"src/APIs.js","original":{"line":25,"column":11}},{"generated":{"line":53,"column":20},"source":"src/APIs.js","original":{"line":25,"column":12},"name":"log"},{"generated":{"line":53,"column":23},"source":"src/APIs.js","original":{"line":25,"column":15}},{"generated":{"line":53,"column":36},"source":"src/APIs.js","original":{"line":25,"column":22}},{"generated":{"line":54,"column":10},"source":"src/APIs.js","original":{"line":25,"column":23}},{"generated":{"line":55,"column":10},"source":"src/APIs.js","original":{"line":25,"column":23}},{"generated":{"line":56,"column":12},"source":"src/APIs.js","original":{"line":25,"column":23}},{"generated":{"line":57,"column":8},"source":"src/APIs.js","original":{"line":25,"column":23}},{"generated":{"line":58,"column":6},"source":"src/APIs.js","original":{"line":25,"column":23}},{"generated":{"line":59,"column":4},"source":"src/APIs.js","original":{"line":25,"column":23}},{"generated":{"line":60,"column":2},"source":"src/APIs.js","original":{"line":25,"column":23}},{"generated":{"line":60,"column":3},"source":"src/APIs.js","original":{"line":27,"column":1}},{"generated":{"line":61,"column":2},"source":"src/APIs.js","original":{"line":27,"column":1}},{"generated":{"line":62,"column":0},"source":"src/APIs.js","original":{"line":27,"column":1}},{"generated":{"line":63,"column":0},"source":"src/APIs.js","original":{"line":27,"column":1}},{"generated":{"line":63,"column":9},"source":"src/APIs.js","original":{"line":30,"column":22},"name":"addServerTodos"},{"generated":{"line":63,"column":23},"source":"src/APIs.js","original":{"line":30,"column":36}},{"generated":{"line":64,"column":2},"source":"src/APIs.js","original":{"line":30,"column":36}},{"generated":{"line":65,"column":0},"source":"src/APIs.js","original":{"line":30,"column":36}},{"generated":{"line":65,"column":2},"source":"src/APIs.js","original":{"line":47,"column":0}},{"generated":{"line":66,"column":0},"source":"src/APIs.js","original":{"line":47,"column":0}},{"generated":{"line":67,"column":2},"source":"src/APIs.js","original":{"line":47,"column":0}},{"generated":{"line":67,"column":79},"source":"src/APIs.js","original":{"line":30,"column":7}},{"generated":{"line":67,"column":97},"source":"src/APIs.js","original":{"line":30,"column":37},"name":"title"},{"generated":{"line":67,"column":102},"source":"src/APIs.js","original":{"line":30,"column":42}},{"generated":{"line":67,"column":104},"source":"src/APIs.js","original":{"line":30,"column":44},"name":"order"},{"generated":{"line":67,"column":109},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":68,"column":4},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":69,"column":4},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":70,"column":6},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":71,"column":8},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":72,"column":10},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":73,"column":12},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":74,"column":12},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":75,"column":12},"source":"src/APIs.js","original":{"line":30,"column":49}},{"generated":{"line":75,"column":19},"source":"src/APIs.js","original":{"line":32,"column":22},"name":"fetch"},{"generated":{"line":75,"column":24},"source":"src/APIs.js","original":{"line":32,"column":27}},{"generated":{"line":75,"column":25},"source":"src/APIs.js","original":{"line":32,"column":28},"name":"APIURL"},{"generated":{"line":75,"column":31},"source":"src/APIs.js","original":{"line":32,"column":34}},{"generated":{"line":75,"column":33},"source":"src/APIs.js","original":{"line":32,"column":36}},{"generated":{"line":76,"column":14},"source":"src/APIs.js","original":{"line":33,"column":6},"name":"method"},{"generated":{"line":76,"column":20},"source":"src/APIs.js","original":{"line":33,"column":12}},{"generated":{"line":76,"column":22},"source":"src/APIs.js","original":{"line":33,"column":14}},{"generated":{"line":76,"column":28},"source":"src/APIs.js","original":{"line":33,"column":20}},{"generated":{"line":77,"column":14},"source":"src/APIs.js","original":{"line":34,"column":6},"name":"headers"},{"generated":{"line":77,"column":21},"source":"src/APIs.js","original":{"line":34,"column":13}},{"generated":{"line":77,"column":23},"source":"src/APIs.js","original":{"line":34,"column":15},"name":"HEADERS"},{"generated":{"line":77,"column":30},"source":"src/APIs.js","original":{"line":34,"column":22}},{"generated":{"line":78,"column":14},"source":"src/APIs.js","original":{"line":35,"column":6},"name":"body"},{"generated":{"line":78,"column":18},"source":"src/APIs.js","original":{"line":35,"column":10}},{"generated":{"line":78,"column":20},"source":"src/APIs.js","original":{"line":35,"column":12},"name":"JSON"},{"generated":{"line":78,"column":24},"source":"src/APIs.js","original":{"line":35,"column":16}},{"generated":{"line":78,"column":25},"source":"src/APIs.js","original":{"line":35,"column":17},"name":"stringify"},{"generated":{"line":78,"column":34},"source":"src/APIs.js","original":{"line":35,"column":26}},{"generated":{"line":78,"column":35},"source":"src/APIs.js","original":{"line":35,"column":27}},{"generated":{"line":79,"column":16},"source":"src/APIs.js","original":{"line":36,"column":8},"name":"title"},{"generated":{"line":79,"column":21},"source":"src/APIs.js","original":{"line":36,"column":13}},{"generated":{"line":79,"column":23},"source":"src/APIs.js","original":{"line":36,"column":15},"name":"title"},{"generated":{"line":79,"column":28},"source":"src/APIs.js","original":{"line":36,"column":20}},{"generated":{"line":80,"column":16},"source":"src/APIs.js","original":{"line":37,"column":8},"name":"order"},{"generated":{"line":80,"column":21},"source":"src/APIs.js","original":{"line":37,"column":13}},{"generated":{"line":80,"column":23},"source":"src/APIs.js","original":{"line":37,"column":15},"name":"order"},{"generated":{"line":81,"column":14},"source":"src/APIs.js","original":{"line":38,"column":6}},{"generated":{"line":81,"column":15},"source":"src/APIs.js","original":{"line":38,"column":7}},{"generated":{"line":82,"column":12},"source":"src/APIs.js","original":{"line":39,"column":4}},{"generated":{"line":82,"column":13},"source":"src/APIs.js","original":{"line":39,"column":5}},{"generated":{"line":82,"column":14},"source":"src/APIs.js","original":{"line":39,"column":6}},{"generated":{"line":83,"column":10},"source":"src/APIs.js","original":{"line":39,"column":6}},{"generated":{"line":84,"column":12},"source":"src/APIs.js","original":{"line":32,"column":10},"name":"res"},{"generated":{"line":84,"column":15},"source":"src/APIs.js","original":{"line":32,"column":13}},{"generated":{"line":85,"column":12},"source":"src/APIs.js","original":{"line":32,"column":13}},{"generated":{"line":86,"column":12},"source":"src/APIs.js","original":{"line":32,"column":13}},{"generated":{"line":86,"column":19},"source":"src/APIs.js","original":{"line":40,"column":23},"name":"res"},{"generated":{"line":86,"column":22},"source":"src/APIs.js","original":{"line":40,"column":26}},{"generated":{"line":86,"column":23},"source":"src/APIs.js","original":{"line":40,"column":27},"name":"json"},{"generated":{"line":86,"column":27},"source":"src/APIs.js","original":{"line":40,"column":31}},{"generated":{"line":86,"column":29},"source":"src/APIs.js","original":{"line":40,"column":33}},{"generated":{"line":87,"column":10},"source":"src/APIs.js","original":{"line":40,"column":33}},{"generated":{"line":88,"column":12},"source":"src/APIs.js","original":{"line":40,"column":10},"name":"json"},{"generated":{"line":88,"column":16},"source":"src/APIs.js","original":{"line":40,"column":14}},{"generated":{"line":89,"column":12},"source":"src/APIs.js","original":{"line":40,"column":14}},{"generated":{"line":89,"column":46},"source":"src/APIs.js","original":{"line":41,"column":11},"name":"json"},{"generated":{"line":89,"column":50},"source":"src/APIs.js","original":{"line":41,"column":15}},{"generated":{"line":90,"column":10},"source":"src/APIs.js","original":{"line":41,"column":15}},{"generated":{"line":91,"column":12},"source":"src/APIs.js","original":{"line":41,"column":15}},{"generated":{"line":92,"column":12},"source":"src/APIs.js","original":{"line":41,"column":15}},{"generated":{"line":93,"column":12},"source":"src/APIs.js","original":{"line":43,"column":4},"name":"console"},{"generated":{"line":93,"column":19},"source":"src/APIs.js","original":{"line":43,"column":11}},{"generated":{"line":93,"column":20},"source":"src/APIs.js","original":{"line":43,"column":12},"name":"log"},{"generated":{"line":93,"column":23},"source":"src/APIs.js","original":{"line":43,"column":15}},{"generated":{"line":93,"column":37},"source":"src/APIs.js","original":{"line":43,"column":22}},{"generated":{"line":94,"column":10},"source":"src/APIs.js","original":{"line":43,"column":23}},{"generated":{"line":95,"column":10},"source":"src/APIs.js","original":{"line":43,"column":23}},{"generated":{"line":96,"column":12},"source":"src/APIs.js","original":{"line":43,"column":23}},{"generated":{"line":97,"column":8},"source":"src/APIs.js","original":{"line":43,"column":23}},{"generated":{"line":98,"column":6},"source":"src/APIs.js","original":{"line":43,"column":23}},{"generated":{"line":99,"column":4},"source":"src/APIs.js","original":{"line":43,"column":23}},{"generated":{"line":100,"column":2},"source":"src/APIs.js","original":{"line":43,"column":23}},{"generated":{"line":100,"column":3},"source":"src/APIs.js","original":{"line":45,"column":1}},{"generated":{"line":101,"column":2},"source":"src/APIs.js","original":{"line":45,"column":1}},{"generated":{"line":102,"column":0},"source":"src/APIs.js","original":{"line":45,"column":1}},{"generated":{"line":103,"column":0},"source":"src/APIs.js","original":{"line":45,"column":1}},{"generated":{"line":103,"column":9},"source":"src/APIs.js","original":{"line":48,"column":22},"name":"editServerTodos"},{"generated":{"line":103,"column":24},"source":"src/APIs.js","original":{"line":48,"column":37}},{"generated":{"line":104,"column":2},"source":"src/APIs.js","original":{"line":48,"column":37}},{"generated":{"line":105,"column":0},"source":"src/APIs.js","original":{"line":48,"column":37}},{"generated":{"line":105,"column":2},"source":"src/APIs.js","original":{"line":66,"column":0}},{"generated":{"line":106,"column":0},"source":"src/APIs.js","original":{"line":66,"column":0}},{"generated":{"line":107,"column":2},"source":"src/APIs.js","original":{"line":66,"column":0}},{"generated":{"line":107,"column":80},"source":"src/APIs.js","original":{"line":48,"column":7}},{"generated":{"line":107,"column":98},"source":"src/APIs.js","original":{"line":48,"column":38},"name":"id"},{"generated":{"line":107,"column":100},"source":"src/APIs.js","original":{"line":48,"column":40}},{"generated":{"line":107,"column":102},"source":"src/APIs.js","original":{"line":48,"column":42},"name":"title"},{"generated":{"line":107,"column":107},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":108,"column":4},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":109,"column":6},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":110,"column":6},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":111,"column":6},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":112,"column":6},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":113,"column":4},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":114,"column":6},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":115,"column":8},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":116,"column":10},"source":"src/APIs.js","original":{"line":48,"column":47}},{"generated":{"line":117,"column":12},"source":"src/APIs.js","original":{"line":48,"column":49},"name":"done"},{"generated":{"line":117,"column":16},"source":"src/APIs.js","original":{"line":48,"column":53}},{"generated":{"line":117,"column":78},"source":"src/APIs.js","original":{"line":48,"column":56}},{"generated":{"line":117,"column":83},"source":"src/APIs.js","original":{"line":48,"column":61}},{"generated":{"line":118,"column":12},"source":"src/APIs.js","original":{"line":48,"column":63},"name":"order"},{"generated":{"line":118,"column":17},"source":"src/APIs.js","original":{"line":48,"column":68}},{"generated":{"line":118,"column":79},"source":"src/APIs.js","original":{"line":48,"column":71}},{"generated":{"line":118,"column":80},"source":"src/APIs.js","original":{"line":48,"column":72}},{"generated":{"line":119,"column":12},"source":"src/APIs.js","original":{"line":48,"column":72}},{"generated":{"line":120,"column":12},"source":"src/APIs.js","original":{"line":48,"column":72}},{"generated":{"line":121,"column":12},"source":"src/APIs.js","original":{"line":48,"column":72}},{"generated":{"line":121,"column":19},"source":"src/APIs.js","original":{"line":50,"column":22},"name":"fetch"},{"generated":{"line":121,"column":24},"source":"src/APIs.js","original":{"line":50,"column":27}},{"generated":{"line":121,"column":35},"source":"src/APIs.js","original":{"line":50,"column":31},"name":"APIURL"},{"generated":{"line":121,"column":41},"source":"src/APIs.js","original":{"line":50,"column":37}},{"generated":{"line":121,"column":55},"source":"src/APIs.js","original":{"line":50,"column":41},"name":"id"},{"generated":{"line":121,"column":57},"source":"src/APIs.js","original":{"line":50,"column":43}},{"generated":{"line":121,"column":60},"source":"src/APIs.js","original":{"line":50,"column":47}},{"generated":{"line":122,"column":14},"source":"src/APIs.js","original":{"line":51,"column":6},"name":"method"},{"generated":{"line":122,"column":20},"source":"src/APIs.js","original":{"line":51,"column":12}},{"generated":{"line":122,"column":22},"source":"src/APIs.js","original":{"line":51,"column":14}},{"generated":{"line":122,"column":27},"source":"src/APIs.js","original":{"line":51,"column":19}},{"generated":{"line":123,"column":14},"source":"src/APIs.js","original":{"line":52,"column":6},"name":"headers"},{"generated":{"line":123,"column":21},"source":"src/APIs.js","original":{"line":52,"column":13}},{"generated":{"line":123,"column":23},"source":"src/APIs.js","original":{"line":52,"column":15},"name":"HEADERS"},{"generated":{"line":123,"column":30},"source":"src/APIs.js","original":{"line":52,"column":22}},{"generated":{"line":124,"column":14},"source":"src/APIs.js","original":{"line":53,"column":6},"name":"body"},{"generated":{"line":124,"column":18},"source":"src/APIs.js","original":{"line":53,"column":10}},{"generated":{"line":124,"column":20},"source":"src/APIs.js","original":{"line":53,"column":12},"name":"JSON"},{"generated":{"line":124,"column":24},"source":"src/APIs.js","original":{"line":53,"column":16}},{"generated":{"line":124,"column":25},"source":"src/APIs.js","original":{"line":53,"column":17},"name":"stringify"},{"generated":{"line":124,"column":34},"source":"src/APIs.js","original":{"line":53,"column":26}},{"generated":{"line":124,"column":35},"source":"src/APIs.js","original":{"line":53,"column":27}},{"generated":{"line":125,"column":16},"source":"src/APIs.js","original":{"line":54,"column":8},"name":"title"},{"generated":{"line":125,"column":21},"source":"src/APIs.js","original":{"line":54,"column":13}},{"generated":{"line":125,"column":23},"source":"src/APIs.js","original":{"line":54,"column":15},"name":"title"},{"generated":{"line":125,"column":28},"source":"src/APIs.js","original":{"line":54,"column":20}},{"generated":{"line":126,"column":16},"source":"src/APIs.js","original":{"line":55,"column":8},"name":"done"},{"generated":{"line":126,"column":20},"source":"src/APIs.js","original":{"line":55,"column":12}},{"generated":{"line":126,"column":22},"source":"src/APIs.js","original":{"line":55,"column":14},"name":"done"},{"generated":{"line":126,"column":26},"source":"src/APIs.js","original":{"line":55,"column":18}},{"generated":{"line":127,"column":16},"source":"src/APIs.js","original":{"line":56,"column":8},"name":"order"},{"generated":{"line":127,"column":21},"source":"src/APIs.js","original":{"line":56,"column":13}},{"generated":{"line":127,"column":23},"source":"src/APIs.js","original":{"line":56,"column":15},"name":"order"},{"generated":{"line":128,"column":14},"source":"src/APIs.js","original":{"line":57,"column":6}},{"generated":{"line":128,"column":15},"source":"src/APIs.js","original":{"line":57,"column":7}},{"generated":{"line":129,"column":12},"source":"src/APIs.js","original":{"line":58,"column":4}},{"generated":{"line":129,"column":13},"source":"src/APIs.js","original":{"line":58,"column":5}},{"generated":{"line":129,"column":14},"source":"src/APIs.js","original":{"line":58,"column":6}},{"generated":{"line":130,"column":10},"source":"src/APIs.js","original":{"line":58,"column":6}},{"generated":{"line":131,"column":12},"source":"src/APIs.js","original":{"line":50,"column":10},"name":"res"},{"generated":{"line":131,"column":15},"source":"src/APIs.js","original":{"line":50,"column":13}},{"generated":{"line":132,"column":12},"source":"src/APIs.js","original":{"line":50,"column":13}},{"generated":{"line":133,"column":12},"source":"src/APIs.js","original":{"line":50,"column":13}},{"generated":{"line":133,"column":19},"source":"src/APIs.js","original":{"line":59,"column":23},"name":"res"},{"generated":{"line":133,"column":22},"source":"src/APIs.js","original":{"line":59,"column":26}},{"generated":{"line":133,"column":23},"source":"src/APIs.js","original":{"line":59,"column":27},"name":"json"},{"generated":{"line":133,"column":27},"source":"src/APIs.js","original":{"line":59,"column":31}},{"generated":{"line":133,"column":29},"source":"src/APIs.js","original":{"line":59,"column":33}},{"generated":{"line":134,"column":10},"source":"src/APIs.js","original":{"line":59,"column":33}},{"generated":{"line":135,"column":12},"source":"src/APIs.js","original":{"line":59,"column":10},"name":"json"},{"generated":{"line":135,"column":16},"source":"src/APIs.js","original":{"line":59,"column":14}},{"generated":{"line":136,"column":12},"source":"src/APIs.js","original":{"line":59,"column":14}},{"generated":{"line":136,"column":46},"source":"src/APIs.js","original":{"line":60,"column":11},"name":"json"},{"generated":{"line":136,"column":50},"source":"src/APIs.js","original":{"line":60,"column":15}},{"generated":{"line":137,"column":10},"source":"src/APIs.js","original":{"line":60,"column":15}},{"generated":{"line":138,"column":12},"source":"src/APIs.js","original":{"line":60,"column":15}},{"generated":{"line":139,"column":12},"source":"src/APIs.js","original":{"line":60,"column":15}},{"generated":{"line":140,"column":12},"source":"src/APIs.js","original":{"line":62,"column":4},"name":"console"},{"generated":{"line":140,"column":19},"source":"src/APIs.js","original":{"line":62,"column":11}},{"generated":{"line":140,"column":20},"source":"src/APIs.js","original":{"line":62,"column":12},"name":"log"},{"generated":{"line":140,"column":23},"source":"src/APIs.js","original":{"line":62,"column":15}},{"generated":{"line":140,"column":37},"source":"src/APIs.js","original":{"line":62,"column":22}},{"generated":{"line":141,"column":10},"source":"src/APIs.js","original":{"line":62,"column":23}},{"generated":{"line":142,"column":10},"source":"src/APIs.js","original":{"line":62,"column":23}},{"generated":{"line":143,"column":12},"source":"src/APIs.js","original":{"line":62,"column":23}},{"generated":{"line":144,"column":8},"source":"src/APIs.js","original":{"line":62,"column":23}},{"generated":{"line":145,"column":6},"source":"src/APIs.js","original":{"line":62,"column":23}},{"generated":{"line":146,"column":4},"source":"src/APIs.js","original":{"line":62,"column":23}},{"generated":{"line":147,"column":2},"source":"src/APIs.js","original":{"line":62,"column":23}},{"generated":{"line":147,"column":3},"source":"src/APIs.js","original":{"line":64,"column":1}},{"generated":{"line":148,"column":2},"source":"src/APIs.js","original":{"line":64,"column":1}},{"generated":{"line":149,"column":0},"source":"src/APIs.js","original":{"line":64,"column":1}},{"generated":{"line":150,"column":0},"source":"src/APIs.js","original":{"line":64,"column":1}},{"generated":{"line":150,"column":9},"source":"src/APIs.js","original":{"line":67,"column":22},"name":"deleteServerTodos"},{"generated":{"line":150,"column":26},"source":"src/APIs.js","original":{"line":67,"column":39}},{"generated":{"line":151,"column":2},"source":"src/APIs.js","original":{"line":67,"column":39}},{"generated":{"line":152,"column":0},"source":"src/APIs.js","original":{"line":67,"column":39}},{"generated":{"line":153,"column":0},"source":"src/APIs.js","original":{"line":67,"column":39}},{"generated":{"line":154,"column":2},"source":"src/APIs.js","original":{"line":67,"column":39}},{"generated":{"line":154,"column":82},"source":"src/APIs.js","original":{"line":67,"column":7}},{"generated":{"line":154,"column":100},"source":"src/APIs.js","original":{"line":67,"column":40},"name":"id"},{"generated":{"line":154,"column":102},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":155,"column":4},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":156,"column":4},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":157,"column":6},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":158,"column":8},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":159,"column":10},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":160,"column":12},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":161,"column":12},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":162,"column":12},"source":"src/APIs.js","original":{"line":67,"column":42}},{"generated":{"line":162,"column":19},"source":"src/APIs.js","original":{"line":69,"column":22},"name":"fetch"},{"generated":{"line":162,"column":24},"source":"src/APIs.js","original":{"line":69,"column":27}},{"generated":{"line":162,"column":35},"source":"src/APIs.js","original":{"line":69,"column":31},"name":"APIURL"},{"generated":{"line":162,"column":41},"source":"src/APIs.js","original":{"line":69,"column":37}},{"generated":{"line":162,"column":55},"source":"src/APIs.js","original":{"line":69,"column":41},"name":"id"},{"generated":{"line":162,"column":57},"source":"src/APIs.js","original":{"line":69,"column":43}},{"generated":{"line":162,"column":60},"source":"src/APIs.js","original":{"line":69,"column":47}},{"generated":{"line":163,"column":14},"source":"src/APIs.js","original":{"line":70,"column":6},"name":"method"},{"generated":{"line":163,"column":20},"source":"src/APIs.js","original":{"line":70,"column":12}},{"generated":{"line":163,"column":22},"source":"src/APIs.js","original":{"line":70,"column":14}},{"generated":{"line":163,"column":30},"source":"src/APIs.js","original":{"line":70,"column":22}},{"generated":{"line":164,"column":14},"source":"src/APIs.js","original":{"line":71,"column":6},"name":"headers"},{"generated":{"line":164,"column":21},"source":"src/APIs.js","original":{"line":71,"column":13}},{"generated":{"line":164,"column":23},"source":"src/APIs.js","original":{"line":71,"column":15},"name":"HEADERS"},{"generated":{"line":165,"column":12},"source":"src/APIs.js","original":{"line":72,"column":4}},{"generated":{"line":165,"column":13},"source":"src/APIs.js","original":{"line":72,"column":5}},{"generated":{"line":165,"column":14},"source":"src/APIs.js","original":{"line":72,"column":6}},{"generated":{"line":166,"column":10},"source":"src/APIs.js","original":{"line":72,"column":6}},{"generated":{"line":167,"column":12},"source":"src/APIs.js","original":{"line":69,"column":10},"name":"res"},{"generated":{"line":167,"column":15},"source":"src/APIs.js","original":{"line":69,"column":13}},{"generated":{"line":168,"column":12},"source":"src/APIs.js","original":{"line":69,"column":13}},{"generated":{"line":169,"column":12},"source":"src/APIs.js","original":{"line":69,"column":13}},{"generated":{"line":169,"column":19},"source":"src/APIs.js","original":{"line":73,"column":23},"name":"res"},{"generated":{"line":169,"column":22},"source":"src/APIs.js","original":{"line":73,"column":26}},{"generated":{"line":169,"column":23},"source":"src/APIs.js","original":{"line":73,"column":27},"name":"json"},{"generated":{"line":169,"column":27},"source":"src/APIs.js","original":{"line":73,"column":31}},{"generated":{"line":169,"column":29},"source":"src/APIs.js","original":{"line":73,"column":33}},{"generated":{"line":170,"column":10},"source":"src/APIs.js","original":{"line":73,"column":33}},{"generated":{"line":171,"column":12},"source":"src/APIs.js","original":{"line":73,"column":10},"name":"json"},{"generated":{"line":171,"column":16},"source":"src/APIs.js","original":{"line":73,"column":14}},{"generated":{"line":172,"column":12},"source":"src/APIs.js","original":{"line":73,"column":14}},{"generated":{"line":172,"column":46},"source":"src/APIs.js","original":{"line":74,"column":11},"name":"json"},{"generated":{"line":172,"column":50},"source":"src/APIs.js","original":{"line":74,"column":15}},{"generated":{"line":173,"column":10},"source":"src/APIs.js","original":{"line":74,"column":15}},{"generated":{"line":174,"column":12},"source":"src/APIs.js","original":{"line":74,"column":15}},{"generated":{"line":175,"column":12},"source":"src/APIs.js","original":{"line":74,"column":15}},{"generated":{"line":176,"column":12},"source":"src/APIs.js","original":{"line":76,"column":4},"name":"console"},{"generated":{"line":176,"column":19},"source":"src/APIs.js","original":{"line":76,"column":11}},{"generated":{"line":176,"column":20},"source":"src/APIs.js","original":{"line":76,"column":12},"name":"log"},{"generated":{"line":176,"column":23},"source":"src/APIs.js","original":{"line":76,"column":15}},{"generated":{"line":176,"column":37},"source":"src/APIs.js","original":{"line":76,"column":22}},{"generated":{"line":177,"column":10},"source":"src/APIs.js","original":{"line":76,"column":23}},{"generated":{"line":178,"column":10},"source":"src/APIs.js","original":{"line":76,"column":23}},{"generated":{"line":179,"column":12},"source":"src/APIs.js","original":{"line":76,"column":23}},{"generated":{"line":180,"column":8},"source":"src/APIs.js","original":{"line":76,"column":23}},{"generated":{"line":181,"column":6},"source":"src/APIs.js","original":{"line":76,"column":23}},{"generated":{"line":182,"column":4},"source":"src/APIs.js","original":{"line":76,"column":23}},{"generated":{"line":183,"column":2},"source":"src/APIs.js","original":{"line":76,"column":23}},{"generated":{"line":183,"column":3},"source":"src/APIs.js","original":{"line":78,"column":1}},{"generated":{"line":184,"column":2},"source":"src/APIs.js","original":{"line":78,"column":1}},{"generated":{"line":185,"column":0},"source":"src/APIs.js","original":{"line":78,"column":1}}],"sources":{"src/APIs.js":"import { TODO_KEY } from \"./APIkey.js\";\r\n\r\nconst APIKEY = TODO_KEY;\r\nconst USERNAME = \"KDT3_LeeEunyoung\";\r\nconst HEADERS = {\r\n  \"content-type\": \"application/json\",\r\n  APIKEY: APIKEY,\r\n  username: USERNAME,\r\n};\r\n\r\nconst APIURL = \"https://asia-northeast3-heropy-api.cloudfunctions.net/api/todos\";\r\n\r\n//////////////////// API ///////////////////////\r\n\r\n//get\r\nexport async function getServerTodos() {\r\n  try {\r\n    const res = await fetch(APIURL, {\r\n      method: \"GET\",\r\n      headers: HEADERS,\r\n    });\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n//add\r\nexport async function addServerTodos(title, order) {\r\n  try {\r\n    const res = await fetch(APIURL, {\r\n      method: \"POST\",\r\n      headers: HEADERS,\r\n      body: JSON.stringify({\r\n        title: title,\r\n        order: order,\r\n      }),\r\n    });\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n//edit\r\nexport async function editServerTodos(id, title, done = false, order = 0) {\r\n  try {\r\n    const res = await fetch(`${APIURL}/${id}`, {\r\n      method: \"PUT\",\r\n      headers: HEADERS,\r\n      body: JSON.stringify({\r\n        title: title,\r\n        done: done,\r\n        order: order,\r\n      }),\r\n    });\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n//delete\r\nexport async function deleteServerTodos(id) {\r\n  try {\r\n    const res = await fetch(`${APIURL}/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: HEADERS,\r\n    });\r\n    const json = await res.json();\r\n    return json;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"480be4072d3f06b6180bf3ee5e858379","cacheData":{"env":{}}}